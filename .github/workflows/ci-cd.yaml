name: CI and CD

on:
  # Define both "push" and "pull_request" to avoid that two jobs run
  # in parallel when pushing to a branch for which a PR exists
  push:
    branches:
    - main
    paths-ignore:
      - 'README.md'
      - 'renovate.json'
  pull_request:
    branches:
    - main
    paths-ignore:
      - 'README.md'
      - 'renovate.json'

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      APP_ID: 322780
      APP_INSTALLATION_ID: 36777409
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Create GitHub app private key file
        run: echo '${{ secrets.TEST_APP_PRIVATE_KEY }}' > private.key
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: test-build
      - name: Test whether we successfully get an app installation token
        run: |
          output=$(docker run --rm -v "$PWD/private.key:/private.key" test-build $APP_ID $APP_INSTALLATION_ID '/private.key')
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "$output"
            exit $exit_code
          fi
      - name: Compute Docker tags to push to
        id: meta
        if: github.ref == 'refs/heads/main'
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value={{date 'YYYY.MM.DD'}}
      - name: Push image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
            